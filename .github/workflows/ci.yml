name: CI
on: [push]

jobs:
  test-js:
    runs-on: [self-hosted, linux, docker]
    container:
      image: docker://node:14
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0

      - name: Test js
        env:
          JS_SRC: "modules/start-and-stop/src"
        run: |
          yarn --cwd $JS_SRC
          npm run --prefix $JS_SRC test
          npx eslint $JS_SRC

  test-tf:
    runs-on: [self-hosted, linux, docker]
    container:
      image: docker://hashicorp/terraform:0.13.3
    env:
      TF_CLI_CONFIG_FILE: "terraformrc"
      BACKEND_FILE_PATH: "backend.tfvars.json"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0

      - name: Install Terraform dependencies
        run: |
          apk add npm
          apk add nodejs
          npm install -g yarn
          yarn --cwd "modules/runners/scripts"

      - name: Setup env
        env:
          TF_CLI_CONFIG_FILE_CONTENT: ${{ secrets.TF_CLI_CONFIG_FILE_CONTENT }}
          BACKEND_DEV_TFVARS_JSON: ${{ secrets.BACKEND_DEV_TFVARS_JSON }}
          GOOGLE_TFVARS_JSON: ${{ secrets.GOOGLE_DEV_TFVARS_JSON }}
          APP_GITHUB_TFVARS_JSON: ${{ secrets.APP_GITHUB_TFVARS_JSON }}
        run: |
          echo $TF_CLI_CONFIG_FILE_CONTENT > $TF_CLI_CONFIG_FILE
          echo $BACKEND_DEV_TFVARS_JSON > $BACKEND_FILE_PATH
          echo $GOOGLE_TFVARS_JSON > google.auto.tfvars.json
          echo $APP_GITHUB_TFVARS_JSON > github.auto.tfvars.json

      - name: Terraform init
        run: |
          terraform init -backend-config=$BACKEND_FILE_PATH

      - name: Terraform checks 
        run: |
          terraform fmt -check -recursive
          terraform validate

      - name: Terraform run 
        run: |
          terraform plan -lock=false
      